@page "/taskcreate"
@inject TaskManagementWeb.Services.TaskService TaskService
@inject NavigationManager Navigation

<h3>タスク登録</h3>

<div class="mb-3">
    <label for="taskName" class="form-label">タスク名</label>
    <input id="taskName" class="form-control" @bind="TaskName" />
</div>

<div class="mb-3">
    <label for="description" class="form-label">説明</label>
    <textarea id="description" class="form-control" @bind="Description"></textarea>
</div>

<div class="mb-3">
    <label for="tag" class="form-label">タスク分類</label>
    <select id="tag" class="form-select" @bind="SelectedTagNo">
        @foreach (var tag in TaskTags)
        {
            <option value="@tag.TagNo">@tag.TagName</option>
        }
    </select>
</div>

<div class="mb-3">
    <label for="dueDate" class="form-label">タスク完了期限</label>
    <input id="dueDate" type="date" class="form-control" @bind="DueDate" min="@MinDate" />
</div>

<button class="btn btn-primary" @onclick="OnRegisterClick">登録</button>

@if (!string.IsNullOrEmpty(ErrorMessage))
{
    <div class="alert alert-danger mt-3">@ErrorMessage</div>
}

@if (ShowConfirm)
{
    <div class="modal show d-block" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">タスクの登録</h5>
                </div>
                <div class="modal-body">
                    <p>入力した内容でタスクを登録しますか？</p>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-primary" @onclick="ConfirmRegistration">はい</button>
                    <button class="btn btn-secondary" @onclick="CancelRegistration">いいえ</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal-backdrop fade show"></div>
}

@code {
    // 入力項目のバインディング用プロパティ
    private string TaskName { get; set; } = string.Empty;
    private string Description { get; set; } = string.Empty;
    private int SelectedTagNo { get; set; } = 1;
    private DateTime DueDate { get; set; } = DateTime.Today;
    private string MinDate => DateTime.Today.ToString("yyyy-MM-dd");

    private List<TaskTagModel> TaskTags = new();

    private string ErrorMessage = string.Empty;
    private bool ShowConfirm = false;

    // ログインユーザーID（何らかの手段で取得してください）
    [Parameter]
    public string UserId { get; set; } = "defaultUser";

    protected override async Task OnInitializedAsync()
    {
        // タスク分類をロード（TagNo, TagName）
        TaskTags = await LoadTaskTagsAsync();

        // タグがあれば初期値セット
        if (TaskTags.Any())
        {
            SelectedTagNo = TaskTags[0].TagNo;
        }
    }

    private async Task<List<TaskTagModel>> LoadTaskTagsAsync()
    {
        // ここはサービスからロードしてください。以下は仮の実装例です。
        return new List<TaskTagModel>
        {
            new TaskTagModel{ TagNo = 1, TagName = "仕事" },
            new TaskTagModel{ TagNo = 2, TagName = "プライベート" },
            new TaskTagModel{ TagNo = 3, TagName = "その他" },
        };
    }

    private void OnRegisterClick()
    {
        ErrorMessage = string.Empty;

        if (string.IsNullOrWhiteSpace(TaskName) || DueDate == default)
        {
            ErrorMessage = "タスク名、またはタスク完了期限が未入力です";
            return;
        }

        ShowConfirm = true;
    }

    private async Task ConfirmRegistration()
    {
        ShowConfirm = false;

        try
        {
            await TaskService.CreateTaskAsync(TaskName, Description, SelectedTagNo, DueDate.ToString("yyyy-MM-dd"), UserId);

            // 登録後は入力クリア
            TaskName = string.Empty;
            Description = string.Empty;
            if (TaskTags.Any()) SelectedTagNo = TaskTags[0].TagNo;
            DueDate = DateTime.Today;

            // 登録成功メッセージや画面遷移などを行う場合はここに記述
            // 例: Navigation.NavigateTo("/tasklist");
        }
        catch (Exception ex)
        {
            ErrorMessage = "タスク登録中にエラーが発生しました。";
            // ログ出力など必要に応じて行う
        }
    }

    private void CancelRegistration()
    {
        ShowConfirm = false;
    }

    // タグモデル（簡易版）
    private class TaskTagModel
    {
        public int TagNo { get; set; }
        public string TagName { get; set; } = string.Empty;
    }
}
